import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
// @ts-ignore - CSS import
import "./globals.css";
import { ThemeProvider } from "@/components/theme/ThemeProvider";
import { themeInitScript } from "@/store/themeStore";
import AppLayoutWrapper from "@/components/layout/AppLayoutWrapper";
import ReduxProvider from "@/redux/ReduxProvider";

// Force dynamic rendering to avoid static generation issues with client components
export const dynamic = 'force-dynamic'

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        {/* Prevent FOUC (Flash of Unstyled Content) by initializing theme before render */}
        <script
          dangerouslySetInnerHTML={{
            __html: themeInitScript,
          }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* Redux Store Provider */}
        <ReduxProvider>
          {/* Initialize theme system */}
          <ThemeProvider />
          
          <>
            {/* Skip to content link for accessibility */}
            <a
              href="#main-content"
              className="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 focus:z-50 focus:px-4 focus:py-2 focus:bg-blue-600 focus:text-white focus:rounded-lg focus:shadow-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
            >
              Skip to main content
            </a>
            
            {/* Global Header and Footer wrapper */}
            <AppLayoutWrapper>
              {children}
            </AppLayoutWrapper>
          </>
        </ReduxProvider>
      </body>
    </html>
  );
}
