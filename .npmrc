# ==========================================
# PNPM CONFIGURATION
# ==========================================
# Production-ready pnpm configuration for Next.js 16 project
# Compatible with Windows, Linux, and macOS
# ==========================================

# ==========================================
# HOISTING & SYMLINK SETTINGS
# ==========================================

# Hoist all dependencies to the root node_modules
# Improves installation speed and disk usage
hoist=true

# Prisma engines configuration for Render deployment
shamefully-hoist=true

# Hoist Prisma packages to root to fix postinstall issues
public-hoist-pattern[]=*prisma*
public-hoist-pattern[]=@prisma/*

# Hoist patterns for specific packages
# public-hoist-pattern[]=*eslint*
# public-hoist-pattern[]=*prettier*

# Use symlinks (default: true)
# Set to false if you have issues with symlinks on Windows
symlink=true

# ==========================================
# STRICT SETTINGS (Production Best Practices)
# ==========================================

# Fail if any peer dependencies are missing
strict-peer-dependencies=false

# Auto-install peer dependencies
auto-install-peers=true

# Fail on unsupported Node.js version
engine-strict=false

# ==========================================
# REGISTRY & NETWORK SETTINGS
# ==========================================

# Use npm registry (default)
registry=https://registry.npmjs.org/

# Network concurrency (parallel downloads)
# Adjust based on your internet speed
network-concurrency=16

# Fetch timeout (milliseconds)
fetch-timeout=60000

# Retry settings for failed downloads
fetch-retries=2
fetch-retry-factor=10
fetch-retry-mintimeout=10000
fetch-retry-maxtimeout=60000

# ==========================================
# STORE & CACHE SETTINGS
# ==========================================

# Store directory (where packages are cached)
# Default: ~/.pnpm-store on Unix, %LOCALAPPDATA%/pnpm/store on Windows
# store-dir=~/.pnpm-store

# Enable global store
store=true

# Verify store integrity (slower but safer)
verify-store-integrity=true

# ==========================================
# MONOREPO SETTINGS
# ==========================================

# Link workspace packages (monorepo)
link-workspace-packages=true

# Prefer workspace packages over registry
prefer-workspace-packages=true

# ==========================================
# LOCKFILE SETTINGS
# ==========================================

# Lockfile format (default: v6.0 for pnpm 8+)
lockfile=true

# Prevent lockfile updates
# lockfile-only=false

# Use git-branch-lockfiles for per-branch lockfiles
# git-branch-lockfiles=false

# ==========================================
# SHAMEFULLY-HOIST (Legacy Compatibility)
# ==========================================

# Enable if you have issues with packages not finding dependencies
# NOT RECOMMENDED for new projects
# shamefully-hoist=false

# ==========================================
# NODE_MODULES STRUCTURE
# ==========================================

# Node linker: 'isolated' (default) or 'hoisted'
# isolated: Better for strict dependency resolution
# hoisted: Better compatibility with legacy tools
node-linker=isolated

# Modules directory name
# modules-dir=node_modules

# Virtual store directory (for isolated mode)
# virtual-store-dir=node_modules/.pnpm

# ==========================================
# PACKAGE RESOLUTION
# ==========================================

# Package import method: 'auto', 'hardlink', 'copy', 'clone'
# hardlink: Fastest, uses hard links (default)
# copy: Slower but works everywhere
package-import-method=auto

# Side effects cache (for faster rebuilds)
side-effects-cache=true
side-effects-cache-readonly=false

# ==========================================
# SCRIPTS SETTINGS
# ==========================================

# Enable recursive script execution
recursive-run=true

# Use specific Node.js version (commented out - use system Node.js)
# use-node-version=20.0.0

# Enable script shell (for Windows compatibility)
script-shell=cmd

# ==========================================
# OPTIONAL: VERDACCIO / PRIVATE REGISTRY
# ==========================================

# Uncomment if using a private npm registry
# @mycompany:registry=https://npm.mycompany.com/
# //npm.mycompany.com/:_authToken=${NPM_TOKEN}

# ==========================================
# OPTIONAL: WORKSPACE PROTOCOL
# ==========================================

# Save workspace protocol in dependencies
# save-workspace-protocol=true

# ==========================================
# OPTIONAL: IGNORE SCRIPTS (Security)
# ==========================================

# Disable all lifecycle scripts (postinstall, etc.)
# Use only if you trust all dependencies
# ignore-scripts=false

# ==========================================
# TIPS FOR PRODUCTION
# ==========================================
#
# 1. CI/CD Pipeline:
#    - Use `pnpm install --frozen-lockfile` for production builds
#    - Use `pnpm install --prefer-offline` for faster installs
#
# 2. Docker:
#    - Copy pnpm-lock.yaml before package.json
#    - Use `pnpm fetch` to download deps before install
#
# 3. Monorepo:
#    - Use `pnpm -r` for recursive commands
#    - Use `pnpm --filter` to run commands in specific packages
#
# 4. Performance:
#    - Set `store-dir` to local disk for faster access
#    - Increase `network-concurrency` on fast connections
#
# ==========================================
